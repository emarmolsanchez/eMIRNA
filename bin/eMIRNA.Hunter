#! usr/bin/sh


while getopts :r:f:o:x:u:b:m:h option

do

case "${option}"

in

r) REF=${OPTARG};;
f) FASTA=${OPTARG};;
o) OUT=${OPTARG};;
x) X=$OPTARG;;
u) UP=$OPTARG;;
b) BACK=$OPTARG;;
m) MODE=$OPTARG;;
\?) echo ""
echo "Invalid option -$OPTARG, please use -h to see instructions"
    exit 1;;
h) echo ""
echo "eMIRNA.Hunter Usage Instructions:

eMIRNA.Hunter [options]

Input:
  -r                                     PATH to Species of interest Genome Bowtie Index
  -f                                     PATH to FASTA file with sequences to query
  -o                                     PATH to desired output folder
  -x                                     Desired Name string for output files
  -u                                     Upwards number of bases for pre-miRNA reconstruction (60-80 recommended)
  -b                                     Backwards number of bases for pre-miRNA reconstruction (15-30 recommended)
  -m                                     eMIRNA.Hunter Mode (homology or denovo)
  -h                                     Display help page

Output:
  <x>.sam                                SAM file output from Bowtie miRNA alignment
  <x>.log                                LOG file output from Bowtie miRNA alignment
  <x>_miRNAs.bed                         BED file output with candidate pre-miRNAs for prediction
  <x>_miRNAs.fa                          FASTA file output with candidate pre-miRNAs for prediction
  <x>_miRNAs_corrected.bed               BED file output with motif corrected candidate pre-miRNAs for prediction
  <x>_miRNAs_corrected.fa                FASTA file output with motif corrected candidate pre-miRNAs for prediction"

      exit 0;;

esac

done

if [[ -z $REF || -z $FASTA || -z $OUT || -z $X || -z $UP || -z $BACK || -z $MODE ]]; then

    echo "eMIRNA.Hunter Usage Instructions:

eMIRNA.Hunter [options]

Input:
  -r                                     PATH to Species of interest Genome Bowtie Index
  -f                                     PATH to FASTA file with sequences to query
  -o                                     PATH to desired output folder
  -x                                     Desired Name string for output files
  -u                                     Upwards number of bases for pre-miRNA reconstruction (60-80 recommended)
  -b                                     Backwards number of bases for pre-miRNA reconstruction (15-30 recommended)
  -m                                     eMIRNA.Hunter Mode (homology or denovo)
  -h                                     Display help page

Output:
  <x>.sam                                SAM file output from Bowtie miRNA alignment
  <x>.log                                LOG file output from Bowtie miRNA alignment
  <x>_miRNAs.bed                         BED file output with candidate pre-miRNAs for prediction
  <x>_miRNAs.fa                          FASTA file output with candidate pre-miRNAs for prediction
  <x>_miRNAs_corrected.bed               BED file output with motif corrected candidate pre-miRNAs for prediction
  <x>_miRNAs_corrected.fa                FASTA file output with motif corrected candidate pre-miRNAs for prediction"

    echo ""
    echo "Error while executing eMiRNA.Hunter!! Argument missing or wrongly assigned."

    exit 1;

fi


#Alignig miRNA sequences with Reference Genome Bowtie Index

bowtie -f -p 16 -n 2 -l 25 -m 50 -k 1 --best --strata $REF $FASTA -S $OUT$X.sam 2>$OUT$X.log

#Filtering aligned sequencies in SAM

awk '{FS="\t"}{OFS="\t"} $2 == 0 {print $1,$3,$4,$4+length($10)}' $OUT$X.sam > $OUT${X}_miRNAs_+.bed

awk '{FS="\t"}{OFS="\t"} $2 == 16 {print $1,$3,$4,$4+length($10)}' $OUT$X.sam > $OUT${X}_miRNAs_-.bed


if [ $MODE == "homology" ]; then

    # Adjusting positions

    awk '/5p/{print $0}' $OUT${X}_miRNAs_-.bed > $OUT${X}_miRNAs_-_5p.bed

    awk '/3p/{print $0}' $OUT${X}_miRNAs_-.bed > $OUT${X}_miRNAs_-_3p.bed

    awk '/3p/{print $0}' $OUT${X}_miRNAs_+.bed > $OUT${X}_miRNAs_+_3p.bed

    awk '/5p/{print $0}' $OUT${X}_miRNAs_+.bed > $OUT${X}_miRNAs_+_5p.bed

    awk '!/5p|3p/{print $0}' $OUT${X}_miRNAs_-.bed > $OUT${X}_miRNAs_-_nobranch.bed

    awk '!/5p|3p/{print $0}' $OUT${X}_miRNAs_+.bed > $OUT${X}_miRNAs_+_nobranch.bed


    awk -vup="$UP" -vback="$BACK" '{FS="\t"}{OFS="\t"}{print $2,$3-up,$4+back,$1"_homolog","1","+"}' $OUT${X}_miRNAs_+_3p.bed > $OUT${X}_miRNAs_+_3p_final.bed

    awk -vup="$UP" -vback="$BACK" '{FS="\t"}{OFS="\t"}{print $2,$3-back,$4+up,$1"_homolog","1","+"}' $OUT${X}_miRNAs_+_5p.bed > $OUT${X}_miRNAs_+_5p_final.bed

    awk -vup="$UP" -vback="$BACK" '{FS="\t"}{OFS="\t"}{print $2,$3-up,$4+back,$1"_homolog","1","-"}' $OUT${X}_miRNAs_-_5p.bed > $OUT${X}_miRNAs_-_5p_final.bed

    awk -vup="$UP" -vback="$BACK" '{FS="\t"}{OFS="\t"}{print $2,$3-back,$4+up,$1"_homolog","1","-"}' $OUT${X}_miRNAs_-_3p.bed > $OUT${X}_miRNAs_-_3p_final.bed

    awk -vup="$UP" -vback="$BACK" '{FS="\t"}{OFS="\t"}{print $2,$3-up,$4+back,$1"-mock3p_homolog","1","+"}' $OUT${X}_miRNAs_+_nobranch.bed > $OUT${X}_miRNAs_+_3p_branched_final.bed

    awk -vup="$UP" -vback="$BACK" '{FS="\t"}{OFS="\t"}{print $2,$3-back,$4+up,$1"-mock5p_homolog","1","+"}' $OUT${X}_miRNAs_+_nobranch.bed > $OUT${X}_miRNAs_+_5p_branched_final.bed

    awk -vup="$UP" -vback="$BACK" '{FS="\t"}{OFS="\t"}{print $2,$3-up,$4+back,$1"-mock5p_homolog","1","-"}' $OUT${X}_miRNAs_-_nobranch.bed > $OUT${X}_miRNAs_-_5p_branched_final.bed

    awk -vup="$UP" -vback="$BACK" '{FS="\t"}{OFS="\t"}{print $2,$3-back,$4+up,$1"-mock3p_homolog","1","-"}' $OUT${X}_miRNAs_-_nobranch.bed > $OUT${X}_miRNAs_-_3p_branched_final.bed


    #Generating .bed

    cat $OUT${X}_miRNAs_+_3p_final.bed $OUT${X}_miRNAs_+_5p_final.bed $OUT${X}_miRNAs_-_3p_final.bed $OUT${X}_miRNAs_-_5p_final.bed $OUT${X}_miRNAs_+_3p_branched_final.bed $OUT${X}_miRNAs_+_5p_branched_final.bed $OUT${X}_miRNAs_-_3p_branched_final.bed $OUT${X}_miRNAs_-_5p_branched_final.bed | sort -V > $OUT${X}_miRNAs.bed


    #Generating FASTA file from .bed

    bedtools getfasta -fi $REF.fa -bed $OUT${X}_miRNAs.bed -s -name -fo $OUT${X}_miRNAs.fa


    #Correcting positions by UG and CNNC motifs and getting new FASTA and BED

    for i in $OUT${X}_miRNAs.fa; do rev $i | awk '/^[A-Z]/ {print match($1, "C[A-Z][A-Z]C")+18}' > $OUT${X}_temp1; done

    for i in $OUT${X}_miRNAs.fa; do awk '/^[A-Z]/ {print match($1, "TG")+12}' $i > $OUT${X}_temp2; done

    paste $OUT${X}_miRNAs.bed $OUT${X}_temp1 $OUT${X}_temp2 > $OUT${X}_temp3

    awk '$6=="+" {print $0}' $OUT${X}_temp3 > $OUT${X}_temp3_+

    awk '$6=="-" {print $0}' $OUT${X}_temp3 > $OUT${X}_temp3_-

    awk '{FS=OFS="\t"}{print $1,$2+$8,$3-$7,$4,$5,$6}' $OUT${X}_temp3_+ > $OUT${X}_temp4_+.bed

    awk '{FS=OFS="\t"}{print $1,$2+$7,$3-$8,$4,$5,$6}' $OUT${X}_temp3_- > $OUT${X}_temp4_-.bed

    awk '$6=="+" {print $0}' $OUT${X}_miRNAs.bed | sort -V > $OUT${X}_temp5_+.bed

    awk '$6=="-" {print $0}' $OUT${X}_miRNAs.bed | sort -V > $OUT${X}_temp5_-.bed

    paste $OUT${X}_temp5_+.bed $OUT${X}_temp4_+.bed > $OUT${X}_temp6_+.bed

    paste $OUT${X}_temp5_-.bed $OUT${X}_temp4_-.bed > $OUT${X}_temp6_-.bed

    awk -vup="$UP" -vback="$BACK" '{FS=OFS="\t"}{if ($4 ~ /5p/) print $1,$2+back,$3-up,$4,$5,$6,$7,$8,$9,$10,$11,$12; else if ($4 ~ /3p/) print $1,$2+up,$3-back,$4,$5,$6,$7,$8,$9,$10,$11,$12}' $OUT${X}_temp6_+.bed > $OUT${X}_temp7_+.bed

    awk -vup="$UP" -vback="$BACK" '{FS=OFS="\t"}{if ($4 ~ /5p/) print $1,$2+up,$3-back,$4,$5,$6,$7,$8,$9,$10,$11,$12; else if ($4 ~ /3p/) print $1,$2+back,$3-up,$4,$5,$6,$7,$8,$9,$10,$11,$12}' $OUT${X}_temp6_-.bed > $OUT${X}_temp7_-.bed

    awk '{FS=OFS="\t"}{if ($4 ~ /5p/ && $2<$8) print $1,$2-3,$9,$4,$5,$6; else if ($4 ~ /3p/ && $3>$9) print $1,$8,$3+3,$4,$5,$6; else print $1,$8,$9,$4,$5,$6}' $OUT${X}_temp7_+.bed > $OUT${X}_temp8_+.bed

    awk '{FS=OFS="\t"}{if ($4 ~ /5p/ && $3>$9) print $1,$8,$3+3,$4,$5,$6; else if ($4 ~ /3p/ && $2<$8) print $1,$2-3,$9,$4,$5,$6; else print $1,$8,$9,$4,$5,$6}' $OUT${X}_temp7_-.bed > $OUT${X}_temp8_-.bed

    awk '{FS=OFS="\t"}{if ($3-$2<70 && $4 ~ /5p/) print $1,$2,$2+67,$4,$5,$6; else if ($3-$2<70 && $4 ~ /3p/) print $1,$3-67,$3,$4,$5,$6; else if ($3-$2>70) print $0}' $OUT${X}_temp8_+.bed > $OUT${X}_temp9_+.bed

    awk '{FS=OFS="\t"}{if ($3-$2<70 && $4 ~ /5p/) print $1,$3-67,$3,$4,$5,$6; else if ($3-$2<70 && $4 ~ /3p/) print $1,$2,$2+67,$4,$5,$6; else if ($3-$2>70) print $0}' $OUT${X}_temp8_-.bed > $OUT${X}_temp9_-.bed 

    cat $OUT${X}_temp9_+.bed $OUT${X}_temp9_-.bed | sort -V > $OUT${X}_temp10.bed


    awk '$3>$2 {print $0}' $OUT${X}_temp10.bed > $OUT${X}_miRNAs_corrected.bed

    bedtools getfasta -fi $REF.fa -bed $OUT${X}_miRNAs_corrected.bed -s -name -fo $OUT${X}_miRNAs_corrected.fa


rm $OUT${X}_miRNAs_+*
rm $OUT${X}_miRNAs_-*
rm $OUT${X}_temp*


elif [ $MODE == "denovo" ]; then


    # Adjusting positions


    awk -vup="$UP" -vback="$BACK" '{FS="\t"}{OFS="\t"}{print $2,$3-up,$4+back,$1"-mock3p","1","+"}' $OUT${X}_miRNAs_+.bed > $OUT${X}_miRNAs_+_3p_branched_final.bed

    awk -vup="$UP" -vback="$BACK" '{FS="\t"}{OFS="\t"}{print $2,$3-back,$4+up,$1"-mock5p","1","+"}' $OUT${X}_miRNAs_+.bed > $OUT${X}_miRNAs_+_5p_branched_final.bed

    awk -vup="$UP" -vback="$BACK" '{FS="\t"}{OFS="\t"}{print $2,$3-up,$4+back,$1"-mock5p","1","-"}' $OUT${X}_miRNAs_-.bed > $OUT${X}_miRNAs_-_5p_branched_final.bed

    awk -vup="$UP" -vback="$BACK" '{FS="\t"}{OFS="\t"}{print $2,$3-back,$4+up,$1"-mock3p","1","-"}' $OUT${X}_miRNAs_-.bed > $OUT${X}_miRNAs_-_3p_branched_final.bed


    #Generating .bed

    cat $OUT${X}_miRNAs_+_3p_branched_final.bed $OUT${X}_miRNAs_+_5p_branched_final.bed $OUT${X}_miRNAs_-_3p_branched_final.bed $OUT${X}_miRNAs_-_5p_branched_final.bed | sort -V > $OUT${X}_miRNAs.bed


    #Generating FASTA file from .bed

    bedtools getfasta -fi $REF.fa -bed $OUT${X}_miRNAs.bed -s -name -fo $OUT${X}_miRNAs.fa


    #Correcting positions by CHC and CNNC motifs and getting new FASTA and BED


    for i in $OUT${X}_miRNAs.fa; do rev $i | awk '/^[A-Z]/ {print match($1, "C[A-Z][A-Z]C")+17}' > $OUT${X}_temp1; done

    for i in $OUT${X}_miRNAs.fa; do awk '/^[A-Z]/ {print match($1, "TG")+12}' $i > $OUT${X}_temp2; done

    paste $OUT${X}_miRNAs.bed $OUT${X}_temp1 $OUT${X}_temp2 > $OUT${X}_temp3

    awk '$6=="+" {print $0}' $OUT${X}_temp3 > $OUT${X}_temp3_+

    awk '$6=="-" {print $0}' $OUT${X}_temp3 > $OUT${X}_temp3_-

    awk '{FS=OFS="\t"}{print $1,$2+$8,$3-$7,$4,$5,$6}' $OUT${X}_temp3_+ > $OUT${X}_temp4_+.bed

    awk '{FS=OFS="\t"}{print $1,$2+$7,$3-$8,$4,$5,$6}' $OUT${X}_temp3_- > $OUT${X}_temp4_-.bed

    awk '$6=="+" {print $0}' $OUT${X}_miRNAs.bed | sort -V > $OUT${X}_temp5_+.bed

    awk '$6=="-" {print $0}' $OUT${X}_miRNAs.bed | sort -V > $OUT${X}_temp5_-.bed

    paste $OUT${X}_temp5_+.bed $OUT${X}_temp4_+.bed > $OUT${X}_temp6_+.bed

    paste $OUT${X}_temp5_-.bed $OUT${X}_temp4_-.bed > $OUT${X}_temp6_-.bed

    awk -vup="$UP" -vback="$BACK" '{FS=OFS="\t"}{if ($4 ~ /5p$/) print $1,$2+back,$3-up,$4,$5,$6,$7,$8,$9,$10,$11,$12; else if ($4 ~ /3p$/) print $1,$2+up,$3-back,$4,$5,$6,$7,$8,$9,$10,$11,$12}' $OUT${X}_temp6_+.bed > $OUT${X}_temp7_+.bed

    awk -vup="$UP" -vback="$BACK" '{FS=OFS="\t"}{if ($4 ~ /5p$/) print $1,$2+up,$3-back,$4,$5,$6,$7,$8,$9,$10,$11,$12; else if ($4 ~ /3p$/) print $1,$2+back,$3-up,$4,$5,$6,$7,$8,$9,$10,$11,$12}' $OUT${X}_temp6_-.bed > $OUT${X}_temp7_-.bed

    awk '{FS=OFS="\t"}{if ($4 ~ /5p$/ && $2<$8) print $1,$2-3,$9,$4,$5,$6; else if ($4 ~ /3p$/ && $3>$9) print $1,$8,$3+3,$4,$5,$6; else print $1,$8,$9,$4,$5,$6}' $OUT${X}_temp7_+.bed > $OUT${X}_temp8_+.bed

    awk '{FS=OFS="\t"}{if ($4 ~ /5p$/ && $3>$9) print $1,$8,$3+3,$4,$5,$6; else if ($4 ~ /3p$/ && $2<$8) print $1,$2-3,$9,$4,$5,$6; else print $1,$8,$9,$4,$5,$6}' $OUT${X}_temp7_-.bed > $OUT${X}_temp8_-.bed

    awk '{FS=OFS="\t"}{if ($3-$2<70 && $4 ~ /5p$/) print $1,$2,$2+67,$4,$5,$6; else if ($3-$2<70 && $4 ~ /3p$/) print $1,$3-67,$3,$4,$5,$6; else if ($3-$2>70) print $0}' $OUT${X}_temp8_+.bed > $OUT${X}_temp9_+.bed

    awk '{FS=OFS="\t"}{if ($3-$2<70 && $4 ~ /5p$/) print $1,$3-67,$3,$4,$5,$6; else if ($3-$2<70 && $4 ~ /3p$/) print $1,$2,$2+67,$4,$5,$6; else if ($3-$2>70) print $0}' $OUT${X}_temp8_-.bed > $OUT${X}_temp9_-.bed 

    cat $OUT${X}_temp9_+.bed $OUT${X}_temp9_-.bed | sort -V > $OUT${X}_temp10.bed


    awk '$3>$2 {print $0}' $OUT${X}_temp10.bed > $OUT${X}_miRNAs_corrected.bed

    bedtools getfasta -fi $REF.fa -bed $OUT${X}_miRNAs_corrected.bed -s -name -fo $OUT${X}_miRNAs_corrected.fa


rm $OUT${X}_miRNAs_+*
rm $OUT${X}_miRNAs_-*
rm $OUT${X}_temp*


else
    
    echo ""
    echo "Error while executing eMiRNA.Hunter!! Please introduce correct mode (-m) option: homology or denovo."

rm $OUT${X}_miRNAs_+*
rm $OUT${X}_miRNAs_-*
rm $OUT${X}.sam
rm $OUT${X}.log


fi

